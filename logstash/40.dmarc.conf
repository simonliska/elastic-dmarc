input {
    file {
        id => "Ingest"
        path => "/var/cache/dmarc-reports/*.xml"
        discover_interval => "5"
        sincedb_path => "YOUR_SINCEDB_PATH" #/var/lib/logstash/plugins/inputs/file/.sincedb_
        start_position => beginning
        codec => multiline {
            negate => true
            #auto_flush_interval => 5
            pattern => "<record>"
            what => "previous"
          }

    }
}

filter {
    xml {
        id => "Parser"
        store_xml => false
        source => "message"
        xpath => [
            "feedback/policy_published/pct/text()", "policy.percentage",
            "/record/row/source_ip/text()", "email.source_ip",
            "/record/row/count/text()", "email.count",
	        "/record/identifiers/header_from/text()", "email.header_from",
            "/record/row/policy_evaluated/disposition/text()", "email.dmarc_action",
            "/record/row/policy_evaluated/dkim/text()", "email.dkim_evaluation",
            "/record/row/policy_evaluated/spf/text()", "email.spf_evaluation",
            "/record/auth_results/dkim/domain/text()", "authresult.dkim_domain",
            "/record/auth_results/dkim/result/text()", "authresult.dkim_result",
            "/record/auth_results/spf/domain/text()", "authresult.spf_domain",
            "/record/auth_results/spf/result/text()", "authresult.spf_result"
        ]
    }
    mutate {
        convert => { 
            "email.count" => "integer" 
            }
        }
        
    geoip{
        id => "IP map"
        source => "email.source_ip"
        add_field => {
            "[geoip][location][coordinates]" => "%{[geoip][location][lat]}, %{[geoip][location][lon]}"
          }
        }
     #    if "_geoip_lookup_failure" in [tags] {
     #   drop { }
    #}
}

output {
        elasticsearch {
        id => "send to elk"
	    hosts => ["http://localhost:9200"]
	    user => "YOUR_ELK_USER"
	    password => "YOUR_ELK_PASSWORD"
        manage_template => "false"
        template => "/etc/logstash/dmarctemplate.json"
        template_name => "dmarc"
        index => "dmarc-%{+YYYY.MM.dd}"
        }
    }


